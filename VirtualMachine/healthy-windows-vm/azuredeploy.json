{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual machine"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of the virtual machine"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Local admin username of the virtual machine"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Local admin password of the virtual machine"
            }
        },
        "imagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer",
            "allowedValues": [
                "MicrosoftWindowsServer",
                "MicrosoftWindowsDesktop"
            ],
            "metadata": {
                "description": "Select image offer for the virtual machine"
            }
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "WindowsServer",
            "allowedValues": [
                "WindowsServer",
                "Windows-10"
            ],
            "metadata": {
                "description": "Select image offer for the virtual machine"
            }
        },
        "windowsOsVersion": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2019-Datacenter",
                "rs5-pro"
            ],
            "metadata": {
                "description": "Select image SKU (aka os edition) for the virtual machine"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A4_v2",
            "metadata": {
                "description": "Size of the virtual machine"
            }
        },
        "logAnalyticsWorkspaceId": {
            "type": "string",
            "metadata": {
                "description": "ID of Log Analytics workspace the virtual machine sends log to"
            }
        },
        "logAnalyticsWorkspaceKey": {
            "type": "securestring",
            "metadata": {
                "description": "Key of Log Analytics workspace the virtual machine sends log to"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Address prefix for Virtual Network address space"
            }
        },
        "sharedVnet": {
            "type": "string",
            "allowedValues": [
                "new",
                "existing"
            ],
            "defaultValue": "new",
            "metadata": {
                "description": "Specify whether you want to deploy a new virtual network or use existing one"
            }
        },
        "vmSubnetPrefix": {
            "type": "string",
            "metadata": {
                "description": "Specify subnet prefix for the virtual machine"
            }
        },
        "bastionSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.1.1.0/27",
            "metadata": {
                "description": "Bastion subnet IP prefix"
            }
        },
        "bastionSubnetName": {
            "type": "string",
            "defaultValue": "AzureBastionSubnet",
            "allowedValues": [
                "AzureBastionSubnet"
            ],
            "metadata": {
                "description": "Bastion subnet name must be fixed as AzureBastionSubnet"
            }
        },
        "scriptSasUri": {
            "type": "string",
            "metadata": {
                "description": "SAS token of the script blob uri"
            }
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Key Vault"
            }
        },
        "keyVaultRgName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Resource Group where Key Vault belongs to"
            }
        },
        "keyName": {
            "type": "string",
            "metadata": {
                "description": "Select key that is used for encryption"
            }
        },
        "keyVersion": {
            "type": "string",
            "metadata": {
                "description": "Specify version of Key in Key Vault"
            }
        }
    },
    "variables": {
        "diagnosticStorageAccountName": "[concat(uniqueString(resourceGroup().id),parameters('vmName'))]",
        "nicName": "[concat(parameters('vmName'),'-nic')]",
        "vnetName": "[concat(parameters('vmName'),'-',parameters('location'),'-vnet')]",
        "subnetName": "[concat(parameters('vmName'), '-subnet')]",
        "bastionHostName": "[concat(parameters('vmName'),'bastion')]",
        "publicIpName": "[concat(variables('bastionHostName'),'-pip')]",
        "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),variables('subnetName'))]",
        "encryptionOperation": "EnableEncryption",
        "KeyEncryptionAlgorithm": "RSA-OAEP",
        "KeyVaultURL": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net/')]",
        "KeyVaultResourceId": "[concat(subscription().id,'/resourceGroups/',parameters('keyVaultRgName'),'/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]",
        "KeyEncryptionKeyURL": "[concat('https://',parameters('keyVaultName'),'.vault.azure.net/keys/',parameters('keyName'),'/',parameters('keyVersion'))]",
        "VolumeType": "All"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('diagnosticStorageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[variables('publicIpName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "condition": "[equals(parameters('sharedVnet'), 'new')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('bastionSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('bastionSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('vmSubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[equals(parameters('sharedVnet'), 'existing')]",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(variables('vnetName'),'/', parameters('bastionSubnetName'))]",
            "location": "[parameters('location')]",
            "properties": {
                "addressPrefix": "[parameters('bastionSubnetPrefix')]"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2019-09-01",
            "name": "[variables('bastionHostName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'),parameters('bastionSubnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipcfg1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'),parameters('bastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',variables('publicIpName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses/',variables('publicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/',variables('diagnosticStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/',variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('windowsOsVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1024,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('vmName'), '/antimalware')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Security",
                "type": "IaaSAntimalware",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "AntimalwareEnabled": true,
                    "RealtimeProtectionEnabled": "true",
                    "ScheduledScanSettings": {
                        "isEnabled": "true",
                        "scanType": "Quick",
                        "day": "7",
                        "time": "120"
                    }
                },
                "protectedSettings": null
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'), '/AADLoginForWindows')]",
            "location": "[parameters('location')]",
            "apiVersion": "2019-03-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'), '/extensions/CustomScriptExtension')]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.ActiveDirectory",
                "type": "AADLoginForWindows",
                "typeHandlerVersion": "0.4",
                "autoUpgradeMinorVersion": true
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('vmName'), '/CustomScriptExtension')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'), '/extensions/antimalware')]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[parameters('scriptSasUri')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File Install-VsCode.ps1"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('vmName'),'/LogAnalytics')]",
            "location": "[concat(parameters('location'))]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'), '/extensions/AADLoginForWindows')]"
            ],
            "properties": {
                "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                "type": "MicrosoftMonitoringAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
                },
                "protectedSettings": {
                    "workspaceKey": "[parameters('logAnalyticsWorkspaceKey')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/diskEncryption')]",
            "apiVersion": "2019-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'), '/extensions/LogAnalytics')]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Security",
                "type": "AzureDiskEncryption",
                "typeHandlerVersion": "2.2",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "EncryptionOperation": "[variables('encryptionOperation')]",
                    "KeyVaultURL": "[variables('KeyVaultURL')]",
                    "KeyVaultResourceId": "[variables('KeyVaultResourceId')]",
                    "KeyEncryptionAlgorithm": "[variables('KeyEncryptionAlgorithm')]",
                    "VolumeType": "[variables('VolumeType')]",
                    "KeyEncryptionKeyURL": "[variables('KeyEncryptionKeyURL')]",
                    "KekVaultResourceId": "[variables('KeyVaultResourceId')]"
                }
            }
        }
    ],
    "outputs": {
    }
}